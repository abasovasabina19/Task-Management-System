-- Package Specification
CREATE OR REPLACE PACKAGE project_management_pkg AS

  -- Proje eklemek için prosedür
  PROCEDURE insert_project (
    p_name projects.name%TYPE,
    p_description projects.description%TYPE,
    p_status projects.status%TYPE,
    p_deadline projects.deadline%TYPE
  );

  -- Proje güncellemek için prosedür
  PROCEDURE update_project (
    p_project_id projects.project_id%TYPE,
    p_name projects.name%TYPE,
    p_description projects.description%TYPE,
    p_status projects.status%TYPE,
    p_deadline projects.deadline%TYPE
  );

  -- Proje silmek için prosedür
  PROCEDURE delete_project (
    p_project_id projects.project_id%TYPE
  );


END project_management_pkg;
/

-- Package Body
CREATE OR REPLACE PACKAGE BODY project_management_pkg AS
  
  -- Proje eklemek için prosedür
  PROCEDURE insert_project (
    p_name projects.name%TYPE,
    p_description projects.description%TYPE,
    p_status projects.status%TYPE,
    p_deadline projects.deadline%TYPE
  ) AS
  BEGIN
    -- Start the transaction
    BEGIN
      INSERT INTO projects (project_id, name, description, status, deadline)
      VALUES (project_id_seq.NEXTVAL, p_name, p_description, p_status, p_deadline);
      COMMIT;
    EXCEPTION
      WHEN OTHERS THEN
        log_error('insert',sqlcode,sqlerrm);
    END;
  END insert_project;

  -- Proje güncellemek için prosedür
  PROCEDURE update_project (
    p_project_id projects.project_id%TYPE,
    p_name projects.name%TYPE,
    p_description projects.description%TYPE,
    p_status projects.status%TYPE,
    p_deadline projects.deadline%TYPE
  ) AS
  BEGIN
    -- Start the transaction
    BEGIN
      UPDATE projects
      SET name = p_name,
          description = p_description,
          status = p_status,
          deadline = p_deadline
      WHERE project_id = p_project_id;
      COMMIT;
    EXCEPTION
      WHEN OTHERS THEN
        log_error('update',sqlcode,sqlerrm);
    END;
  END update_project;

  -- Proje silmek için prosedür
  PROCEDURE delete_project (
    p_project_id projects.project_id%TYPE
  ) AS
  BEGIN
    -- Start the transaction
    BEGIN
      DELETE FROM projects WHERE project_id = p_project_id;
      COMMIT;
    EXCEPTION
      WHEN OTHERS THEN
       log_error('delete',sqlcode,sqlerrm);
    END;
  END delete_project;
   
END project_management_pkg;
/


  EXEC project_management_pkg.insert_project('Proje_Adi', 'Proje_Aciklama', 'To-Do', TO_TIMESTAMP('2023-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'));
  
  EXEC project_management_pkg.update_project(3, 'Yeni_Proje_Adi', 'Yeni_Proje_Aciklama', 'In Progress', TO_TIMESTAMP('2023-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'));
   
   
  EXEC project_management_pkg.delete_project(2);
  
/

select *from projects;
