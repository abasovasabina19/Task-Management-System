CREATE OR REPLACE PACKAGE user_management_pkg AS
  -- Kullan?c? Ekleme (Insert)
  PROCEDURE add_user(
    p_username users.username%TYPE,
    p_email users.email%TYPE,
    p_password users.password%TYPE,
    p_role_name roles.role_name%TYPE
  );

  -- Kullan?c? Güncelleme (Update)
  PROCEDURE update_user(
    p_user_id users.user_id%TYPE,
    p_username users.username%TYPE,
    p_email users.email%TYPE,
    p_password users.password%TYPE,
    p_role_name roles.role_name%TYPE
  );

  -- Kullan?c? Silme (Delete)
  PROCEDURE delete_user(p_user_id users.user_id%TYPE);
 
END user_management_pkg;
/

-- Body
CREATE OR REPLACE PACKAGE BODY user_management_pkg AS
  -- Kullan?c? Ekleme (Insert)
  PROCEDURE add_user(
    p_username users.username%TYPE,
    p_email users.email%TYPE,
    p_password users.password%TYPE,
    p_role_name roles.role_name%TYPE
  ) AS
    v_role_id roles.role_id%TYPE;
  BEGIN
    -- Verilen rol ad?na göre rol kimli?ini bul
    SELECT role_id INTO v_role_id FROM roles WHERE role_name = p_role_name;
    
    -- Kullan?c? eklemesi
    INSERT INTO users (user_id, username, email, password, role_id)
    VALUES (user_id_seq.NEXTVAL, p_username, p_email, p_password, v_role_id);

    COMMIT;
    
  EXCEPTION
    WHEN OTHERS THEN
    log_error('insert',sqlcode,sqlerrm);
      ROLLBACK;
      
  END add_user;

  -- Kullan?c? Güncelleme (Update)
  PROCEDURE update_user(
    p_user_id users.user_id%TYPE,
    p_username users.username%TYPE,
    p_email users.email%TYPE,
    p_password users.password%TYPE,
    p_role_name roles.role_name%TYPE
  ) AS
    v_role_id roles.role_id%TYPE;
  BEGIN
    -- Verilen rol ad?na göre rol kimli?ini bul
    SELECT role_id INTO v_role_id FROM roles WHERE role_name = p_role_name;
    
    -- Kullan?c? güncellemesi
    UPDATE users
    SET
      username = p_username,
      email = p_email,
      password = p_password,
      role_id = v_role_id
    WHERE user_id = p_user_id;
    
    COMMIT;
    

  EXCEPTION
    WHEN OTHERS THEN
     log_error('update',sqlcode,sqlerrm);
      ROLLBACK;
      
  END update_user;

  -- Kullan?c? Silme (Delete)
  PROCEDURE delete_user(p_user_id users.user_id%TYPE) AS
  BEGIN
    DELETE FROM users WHERE user_id = p_user_id;
    COMMIT;
   
  EXCEPTION
    WHEN OTHERS THEN
     log_error('delete',sqlcode,sqlerrm);
      ROLLBACK;
   
  END delete_user;

END user_management_pkg;
/
/
EXEC user_management_pkg.add_user('Sabina', 'Sabina@div.edu.az', 'parola123', 'User');
EXEC user_management_pkg.update_user(17, 'Leman', 'Leman@div.edu.az', 'newparola12', 'Admin');
EXEC user_management_pkg.delete_user(1);
EXEC user_management_pkg.add_log(17, NULL, NULL, 'USER_INSERT', 'Yeni user eklendi: Leman'); 

select *from users;
select *from logs;
